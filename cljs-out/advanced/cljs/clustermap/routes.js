// Compiled by ClojureScript 0.0-2138
goog.provide('clustermap.routes');
goog.require('cljs.core');
goog.require('sablono.core');
goog.require('sablono.core');
goog.require('sablono.core');
clustermap.routes.type_name_keys = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$319,cljs.core.constant$keyword$296,cljs.core.constant$keyword$320,cljs.core.constant$keyword$296,cljs.core.constant$keyword$321,cljs.core.constant$keyword$338], null);
clustermap.routes.name_for = (function name_for(type,obj){return cljs.core.get.cljs$core$IFn$_invoke$arity$2(obj,cljs.core.get.cljs$core$IFn$_invoke$arity$2(clustermap.routes.type_name_keys,type));
});
clustermap.routes.portfolio_company_path = (function portfolio_company_path(app_state,obj){return [cljs.core.str("#/"),cljs.core.str((function (){var G__23214 = app_state;var G__23214__$1 = (((G__23214 == null))?null:cljs.core.deref(G__23214));var G__23214__$2 = (((G__23214__$1 == null))?null:cljs.core.constant$keyword$413.cljs$core$IFn$_invoke$arity$1(G__23214__$1));var G__23214__$3 = (((G__23214__$2 == null))?null:cljs.core.name(G__23214__$2));return G__23214__$3;
})()),cljs.core.str("/portfolio-company/"),cljs.core.str(cljs.core.constant$keyword$331.cljs$core$IFn$_invoke$arity$1(obj))].join('');
});
clustermap.routes.investor_company_path = (function investor_company_path(app_state,obj){return [cljs.core.str("#/"),cljs.core.str((function (){var G__23216 = app_state;var G__23216__$1 = (((G__23216 == null))?null:cljs.core.deref(G__23216));var G__23216__$2 = (((G__23216__$1 == null))?null:cljs.core.constant$keyword$413.cljs$core$IFn$_invoke$arity$1(G__23216__$1));var G__23216__$3 = (((G__23216__$2 == null))?null:cljs.core.name(G__23216__$2));return G__23216__$3;
})()),cljs.core.str("/investor-company/"),cljs.core.str(cljs.core.constant$keyword$335.cljs$core$IFn$_invoke$arity$1(obj))].join('');
});
clustermap.routes.constituency_path = (function constituency_path(app_state,obj){return [cljs.core.str("#/"),cljs.core.str((function (){var G__23218 = app_state;var G__23218__$1 = (((G__23218 == null))?null:cljs.core.deref(G__23218));var G__23218__$2 = (((G__23218__$1 == null))?null:cljs.core.constant$keyword$413.cljs$core$IFn$_invoke$arity$1(G__23218__$1));var G__23218__$3 = (((G__23218__$2 == null))?null:cljs.core.name(G__23218__$2));return G__23218__$3;
})()),cljs.core.str("/constituency/"),cljs.core.str(cljs.core.constant$keyword$337.cljs$core$IFn$_invoke$arity$1(obj))].join('');
});
clustermap.routes.no_selection_path = (function no_selection_path(app_state,_){return [cljs.core.str("#/"),cljs.core.str((function (){var G__23220 = app_state;var G__23220__$1 = (((G__23220 == null))?null:cljs.core.deref(G__23220));var G__23220__$2 = (((G__23220__$1 == null))?null:cljs.core.constant$keyword$413.cljs$core$IFn$_invoke$arity$1(G__23220__$1));var G__23220__$3 = (((G__23220__$2 == null))?null:cljs.core.name(G__23220__$2));return G__23220__$3;
})())].join('');
});
clustermap.routes.type_paths = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.constant$keyword$319,clustermap.routes.portfolio_company_path,cljs.core.constant$keyword$320,clustermap.routes.investor_company_path,cljs.core.constant$keyword$321,clustermap.routes.constituency_path,null,clustermap.routes.no_selection_path], null);
clustermap.routes.path_for = (function path_for(app_state,type,obj){return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(clustermap.routes.type_paths,type),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [app_state,obj], null));
});
clustermap.routes.link_for = (function link_for(app_state,type,obj){return React.DOM.a({"href": clustermap.routes.path_for(app_state,type,obj)},sablono.interpreter.interpret(clustermap.routes.name_for(type,obj)));
});
