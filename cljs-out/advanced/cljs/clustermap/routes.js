// Compiled by ClojureScript 0.0-2173
goog.provide('clustermap.routes');
goog.require('cljs.core');
goog.require('sablono.core');
goog.require('sablono.core');
clustermap.routes.type_name_keys = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$629,cljs.core.constant$keyword$594,cljs.core.constant$keyword$630,cljs.core.constant$keyword$594,cljs.core.constant$keyword$631,cljs.core.constant$keyword$657], null);
clustermap.routes.name_for = (function name_for(type,obj){return cljs.core.get.cljs$core$IFn$_invoke$arity$2(obj,cljs.core.get.cljs$core$IFn$_invoke$arity$2(clustermap.routes.type_name_keys,type));
});
clustermap.routes.portfolio_company_path = (function portfolio_company_path(app_state,obj){return [cljs.core.str("#/"),cljs.core.str((function (){var G__34957 = app_state;var G__34957__$1 = (((G__34957 == null))?null:cljs.core.deref(G__34957));var G__34957__$2 = (((G__34957__$1 == null))?null:cljs.core.constant$keyword$734.cljs$core$IFn$_invoke$arity$1(G__34957__$1));var G__34957__$3 = (((G__34957__$2 == null))?null:cljs.core.name(G__34957__$2));return G__34957__$3;
})()),cljs.core.str("/portfolio-company/"),cljs.core.str(cljs.core.constant$keyword$650.cljs$core$IFn$_invoke$arity$1(obj))].join('');
});
clustermap.routes.investor_company_path = (function investor_company_path(app_state,obj){return [cljs.core.str("#/"),cljs.core.str((function (){var G__34959 = app_state;var G__34959__$1 = (((G__34959 == null))?null:cljs.core.deref(G__34959));var G__34959__$2 = (((G__34959__$1 == null))?null:cljs.core.constant$keyword$734.cljs$core$IFn$_invoke$arity$1(G__34959__$1));var G__34959__$3 = (((G__34959__$2 == null))?null:cljs.core.name(G__34959__$2));return G__34959__$3;
})()),cljs.core.str("/investor-company/"),cljs.core.str(cljs.core.constant$keyword$654.cljs$core$IFn$_invoke$arity$1(obj))].join('');
});
clustermap.routes.constituency_path = (function constituency_path(app_state,obj){return [cljs.core.str("#/"),cljs.core.str((function (){var G__34961 = app_state;var G__34961__$1 = (((G__34961 == null))?null:cljs.core.deref(G__34961));var G__34961__$2 = (((G__34961__$1 == null))?null:cljs.core.constant$keyword$734.cljs$core$IFn$_invoke$arity$1(G__34961__$1));var G__34961__$3 = (((G__34961__$2 == null))?null:cljs.core.name(G__34961__$2));return G__34961__$3;
})()),cljs.core.str("/constituency/"),cljs.core.str(cljs.core.constant$keyword$656.cljs$core$IFn$_invoke$arity$1(obj))].join('');
});
clustermap.routes.no_selection_path = (function no_selection_path(app_state,_){return [cljs.core.str("#/"),cljs.core.str((function (){var G__34963 = app_state;var G__34963__$1 = (((G__34963 == null))?null:cljs.core.deref(G__34963));var G__34963__$2 = (((G__34963__$1 == null))?null:cljs.core.constant$keyword$734.cljs$core$IFn$_invoke$arity$1(G__34963__$1));var G__34963__$3 = (((G__34963__$2 == null))?null:cljs.core.name(G__34963__$2));return G__34963__$3;
})())].join('');
});
clustermap.routes.type_paths = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.constant$keyword$629,clustermap.routes.portfolio_company_path,cljs.core.constant$keyword$630,clustermap.routes.investor_company_path,cljs.core.constant$keyword$631,clustermap.routes.constituency_path,null,clustermap.routes.no_selection_path], null);
clustermap.routes.path_for = (function path_for(app_state,type,obj){return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(clustermap.routes.type_paths,type),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [app_state,obj], null));
});
clustermap.routes.link_for = (function link_for(app_state,type,obj){return React.DOM.a({"href": clustermap.routes.path_for(app_state,type,obj)},sablono.interpreter.interpret(clustermap.routes.name_for(type,obj)));
});
