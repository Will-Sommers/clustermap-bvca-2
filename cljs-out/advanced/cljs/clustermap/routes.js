// Compiled by ClojureScript 0.0-2138
goog.provide('clustermap.routes');
goog.require('cljs.core');
goog.require('sablono.core');
goog.require('sablono.core');
goog.require('sablono.core');
clustermap.routes.type_name_keys = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$296,cljs.core.constant$keyword$273,cljs.core.constant$keyword$297,cljs.core.constant$keyword$273,cljs.core.constant$keyword$298,cljs.core.constant$keyword$378], null);
clustermap.routes.name_for = (function name_for(type,obj){return cljs.core.get.cljs$core$IFn$_invoke$arity$2(obj,cljs.core.get.cljs$core$IFn$_invoke$arity$2(clustermap.routes.type_name_keys,type));
});
clustermap.routes.portfolio_company_path = (function portfolio_company_path(app_state,obj){return [cljs.core.str("#/"),cljs.core.str((function (){var G__22971 = app_state;var G__22971__$1 = (((G__22971 == null))?null:cljs.core.deref(G__22971));var G__22971__$2 = (((G__22971__$1 == null))?null:cljs.core.constant$keyword$379.cljs$core$IFn$_invoke$arity$1(G__22971__$1));var G__22971__$3 = (((G__22971__$2 == null))?null:cljs.core.name(G__22971__$2));return G__22971__$3;
})()),cljs.core.str("/portfolio-company/"),cljs.core.str(cljs.core.constant$keyword$380.cljs$core$IFn$_invoke$arity$1(obj))].join('');
});
clustermap.routes.investor_company_path = (function investor_company_path(app_state,obj){return [cljs.core.str("#/"),cljs.core.str((function (){var G__22973 = app_state;var G__22973__$1 = (((G__22973 == null))?null:cljs.core.deref(G__22973));var G__22973__$2 = (((G__22973__$1 == null))?null:cljs.core.constant$keyword$379.cljs$core$IFn$_invoke$arity$1(G__22973__$1));var G__22973__$3 = (((G__22973__$2 == null))?null:cljs.core.name(G__22973__$2));return G__22973__$3;
})()),cljs.core.str("/investor-company/"),cljs.core.str(cljs.core.constant$keyword$381.cljs$core$IFn$_invoke$arity$1(obj))].join('');
});
clustermap.routes.constituency_path = (function constituency_path(app_state,obj){return [cljs.core.str("#/"),cljs.core.str((function (){var G__22975 = app_state;var G__22975__$1 = (((G__22975 == null))?null:cljs.core.deref(G__22975));var G__22975__$2 = (((G__22975__$1 == null))?null:cljs.core.constant$keyword$379.cljs$core$IFn$_invoke$arity$1(G__22975__$1));var G__22975__$3 = (((G__22975__$2 == null))?null:cljs.core.name(G__22975__$2));return G__22975__$3;
})()),cljs.core.str("/constituency/"),cljs.core.str(cljs.core.constant$keyword$382.cljs$core$IFn$_invoke$arity$1(obj))].join('');
});
clustermap.routes.no_selection_path = (function no_selection_path(app_state,_){return [cljs.core.str("#/"),cljs.core.str((function (){var G__22977 = app_state;var G__22977__$1 = (((G__22977 == null))?null:cljs.core.deref(G__22977));var G__22977__$2 = (((G__22977__$1 == null))?null:cljs.core.constant$keyword$379.cljs$core$IFn$_invoke$arity$1(G__22977__$1));var G__22977__$3 = (((G__22977__$2 == null))?null:cljs.core.name(G__22977__$2));return G__22977__$3;
})())].join('');
});
clustermap.routes.type_paths = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.constant$keyword$296,clustermap.routes.portfolio_company_path,cljs.core.constant$keyword$297,clustermap.routes.investor_company_path,cljs.core.constant$keyword$298,clustermap.routes.constituency_path,null,clustermap.routes.no_selection_path], null);
clustermap.routes.path_for = (function path_for(app_state,type,obj){return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(clustermap.routes.type_paths,type),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [app_state,obj], null));
});
clustermap.routes.link_for = (function link_for(app_state,type,obj){return React.DOM.a({"href": clustermap.routes.path_for(app_state,type,obj)},sablono.interpreter.interpret(clustermap.routes.name_for(type,obj)));
});
